B-4.c CODE:
-----------

int main()
{
    int a, b, c;
    b = (a + c + b) * (c + a);
    return b;
}
//AFTER COMPILING THESE .c FILE a.out, .i, .o, .s FILES ARE GENERATED.


B-4.i CODE:
-----------

# 1 "B-4.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "B-4.c"
int main()
{
    int a, b, c;
    b = (a + c + b) * (c + a);
    return b;
}


B-4.o CODE:
-----------

B-4.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	8b 55 f4             	mov    -0xc(%rbp),%edx
   b:	8b 45 f8             	mov    -0x8(%rbp),%eax
   e:	01 c2                	add    %eax,%edx
  10:	8b 45 fc             	mov    -0x4(%rbp),%eax
  13:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
  16:	8b 55 f8             	mov    -0x8(%rbp),%edx
  19:	8b 45 f4             	mov    -0xc(%rbp),%eax
  1c:	01 d0                	add    %edx,%eax
  1e:	0f af c1             	imul   %ecx,%eax
  21:	89 45 fc             	mov    %eax,-0x4(%rbp)
  24:	8b 45 fc             	mov    -0x4(%rbp),%eax
  27:	5d                   	pop    %rbp
  28:	c3                   	retq   


B-4.s CODE:
-----------

	.file	"B-4.c"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	-12(%rbp), %edx
	movl	-8(%rbp), %eax
	addl	%eax, %edx
	movl	-4(%rbp), %eax
	leal	(%rdx,%rax), %ecx
	movl	-8(%rbp), %edx
	movl	-12(%rbp), %eax
	addl	%edx, %eax
	imull	%ecx, %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 9.3.0-10ubuntu2) 9.3.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	 1f - 0f
	.long	 4f - 1f
	.long	 5
0:
	.string	 "GNU"
1:
	.align 8
	.long	 0xc0000002
	.long	 3f - 2f
2:
	.long	 0x3
3:
	.align 8
4:
